{"version":3,"sources":["Card.js","LeftMenu.js","EmptyContent.js","Content.js","RightMenu.js","App.js","serviceWorker.js","index.js"],"names":["Card","keyProp","title","onClick","useDrag","item","name","type","end","monitor","dropResult","getDropResult","collect","isDragging","drag","key","ref","className","Menu","props","data","listCard","Object","keys","map","parentCallback","sendData","icon","faCaretLeft","size","parentCallback2","EmptyContent","isLeft","leftMenu","useDrop","accept","drop","isOver","canDrop","style","width","height","left","margin","transition","textAlign","lineHeight","boxsizing","padding","Content","firstName","lastName","yourCity","company","role","phoneNumber","show","notShow","RightMenu","handleChange","event","target","console","log","value","onChange","App","state","card","cardA","cardB","showMenu","bind","leftMenuCallback","rightMenuCallback","this","setState","newCard","DndProvider","backend","HTML5Backend","faPlusCircle","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.480c7d1f.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\nimport { useDrag } from 'react-dnd';\n\nconst Card = ({ keyProp, title, onClick }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { name: keyProp,  type: 'card' },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult()\n      if (item && dropResult) {\n        // alert(`You dropped ${item.name} into ${dropResult.name}!`)\n        onClick(item)\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const click = () => {\n    return onClick();\n  }\n\n  return <div key={keyProp} ref={drag} className=\"card\" onClick={click}>{title}</div>\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './LeftMenu.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst Menu = (props) => {\n  const sendData = (key) => {\n    return props.parentCallback(key);\n  }\n\n  const closeMenu = () => {\n    return props.parentCallback2();\n  }\n\n  const data = props.data;\n  const listCard = Object.keys(data).map((key) =>\n    // <li ref={drag} key={key} onClick={() => sendData(key)} >{data[key].title}</li>\n    <Card keyProp={key} onClick={() => sendData(key)} title={data[key].title} />\n  );\n\n  return (\n    <div className=\"leftMenu\">\n      {listCard}\n\n      <FontAwesomeIcon className=\"closeButton\" icon={faCaretLeft} size=\"2x\" onClick={closeMenu} />\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport './EmptyContent.css';\nimport { useDrop } from 'react-dnd';\n\nconst EmptyContent = (props) => {\n  const first = {\n    width: 'calc(90% - 400px)',\n    height: '300px',\n    left: \"10%\",\n    margin: '100px 200px',\n    textAlign: 'center',\n    lineHeight: '300px',\n    boxsizing: 'border-box',\n    padding: 0,\n    transition: '0.5s'\n  }\n  const second = {\n    width: 'calc(80% - 400px)',\n    height: '200px',\n    left: \"20%\",\n    margin: '100px 200px',\n    transition: '0.5s'\n  }\n\n  const isLeft = props.leftMenu;\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'card',\n    drop: () => ({ name:  'Kotak'}),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    })\n  })\n  const isActive = canDrop && isOver\n\n  if (!isLeft) {\n    return (\n      <div style={first} className=\"content\">\n        <h3 style={{margin: 0}}>Choose Template</h3>\n      </div>\n    )\n  } else {\n    return (\n      <div ref={drop} style={second} className=\"content\">\n        {isActive ? '' : ''}\n      </div>\n    )\n  }\n}\n\nexport default EmptyContent;\n","import React from 'react';\nimport './Content.css';\nimport { useDrop } from 'react-dnd';\n\nconst Content = (props) => {\n  const { title, firstName, lastName, yourCity, name, company, role, phoneNumber } = props.data;\n  const isLeft = props.leftMenu;\n\n  const show = {\n    width: 'calc(60% - 40px)',\n    left: \"20%\"\n  }\n  const notShow = {\n    width: 'calc(70% - 100px)',\n    left: \"10%\",\n    margin: '100px 50px',\n  }\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'card',\n    drop: () => ({ name:  'Kotak'}),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    })\n  })\n  const isActive = canDrop && isOver\n\n  if (title === 'Card A') {\n    return (\n      <div ref={drop} style={isLeft ? show : notShow} className=\"content\">\n        <h3>CARD A</h3>\n        <br />\n        <h4>First Name: {firstName}</h4>\n        <h4>Last Name: {lastName}</h4>\n        <h4>Your City: {yourCity}</h4>\n      </div>\n    );\n  } else if (title === 'Card B') {\n    return (\n      <div ref={drop} style={isLeft ? show : notShow} className=\"content\">\n        <h3>CARD B</h3>\n        <br />\n        <h4>Name: {name}</h4>\n        <h4>Company: {company}</h4>\n        <h4>Role: {role}</h4>\n        <h4>Phone Number: {phoneNumber}</h4>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport './RightMenu.css';\n\nconst RightMenu = (props) => {\n  const handleChange = (event) => {\n    const name = event.target.name;\n    console.log(event.target.name + ' ' + event.target.value);\n\n    const data = props.data;\n    const key = props.keyProp;\n    data[name] = event.target.value;\n\n    console.log(data);\n    console.log(key);\n\n    return props.parentCallback(key, data);\n  }\n\n  const { title, firstName, lastName, yourCity, name, company, role, phoneNumber } = props.data;\n\n  if (title === 'Card A') {\n    return (\n      <div className=\"rightMenu\">\n      <form>\n        <label>First Name</label>\n        <input type=\"text\" name=\"firstName\" onChange={handleChange} value={firstName || ''} />\n        <label> Last Name</label>\n        <input type=\"text\" name=\"lastName\" onChange={handleChange} value={lastName || ''} />\n        <label>Your City</label>\n        <input type=\"text\" name=\"yourCity\" onChange={handleChange} value={yourCity || ''} />\n      </form>\n      </div>\n    );\n  } else if (title === 'Card B') {\n    return (\n      <div>\n      <form className=\"rightMenu\">\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" onChange={handleChange} value={name || ''} />\n        <label>Company</label>\n        <input type=\"text\" name=\"company\" onChange={handleChange} value={company || ''} />\n        <label>Role</label>\n        <input type=\"text\" name=\"role\" onChange={handleChange} value={role || ''} />\n        <label>Phone Number</label>\n        <input type=\"text\" name=\"phoneNumber\" onChange={handleChange} value={phoneNumber || ''} />\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default RightMenu;\n","import React, { Component } from 'react';\nimport LeftMenu from './LeftMenu';\nimport EmptyContent from './EmptyContent';\nimport Content from './Content';\nimport RightMenu from './RightMenu';\nimport './App.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      card: {\n        cardA: {\n          show: false,\n          title: 'Card A',\n          firstName: '',\n          lastName: '',\n          yourCity: ''\n        },\n        cardB: {\n          show: false,\n          title: 'Card B',\n          name: '',\n          company: '',\n          role: '',\n          phoneNumber: ''\n        }\n      },\n\n      leftMenu: false,\n      key: \"\",\n    }\n\n    this.showMenu = this.showMenu.bind(this);\n    this.leftMenuCallback = this.leftMenuCallback.bind(this);\n    this.rightMenuCallback = this.rightMenuCallback.bind(this);\n  }\n\n  showMenu() {\n    this.setState({ leftMenu: !this.state.leftMenu });\n  }\n\n  leftMenuCallback(key) {\n    console.log(\"left \", key);\n\n    if (key === 'cardA') {\n      this.setState({ key: key });\n    } else if (key === 'cardB') {\n      this.setState({ key: key });\n    }\n  }\n\n  rightMenuCallback(key, data) {\n    console.log(\"right \", key);\n\n    const newCard = this.state.card;\n    newCard[key] = data;\n\n    this.setState({ key: key, card: newCard });\n  }\n\n  render() {\n    const { card, key, leftMenu } = this.state;\n\n    return (\n      <div className=\"component-app\">\n        <DndProvider backend={HTML5Backend}>\n          <header>\n            <h3>Header</h3>\n          </header>\n\n          <div className=\"left\">\n            {!this.state.leftMenu && <FontAwesomeIcon className=\"plusButton\" icon={faPlusCircle} size=\"4x\" onClick={this.showMenu} />}\n          </div>\n          {this.state.leftMenu && <LeftMenu data={card} parentCallback={this.leftMenuCallback} parentCallback2={this.showMenu} /> }\n\n          {key && <Content data={card[key]} keyProp={key} leftMenu={leftMenu} />}\n          {!key && <EmptyContent leftMenu={leftMenu} />}\n\n          {key && <RightMenu data={card[key]} keyProp={key} parentCallback={this.rightMenuCallback} />}\n        </DndProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}